1.桌上有一空盘，允许存放一只水果。爸爸可向盘中放苹果，也可向盘中放桔子，儿子专等吃盘中的桔子，女儿专等吃盘中的苹果。规定当盘空时一次只能放一只水果供吃者取用，请用P、V原语实现爸爸、儿子、女儿三个并发进程的同步。
解：
在本题中，应设置三个信号量S、So、Sa，信号量S表示盘子是否为空，其初值为1；信号量So表示盘中是否有桔子，其初值为0；信号量Sa表示盘中是否有苹果，其初值为0。
同步描述如下：
int S＝1;
int Sa＝0;
int So＝0;
      main()
      {
        cobegin
            father();      /*父亲进程*/
            son();        /*儿子进程*/
            daughter();    /*女儿进程*/
        coend
    ｝
    father()
    {
        while(1)
          {
            P(S)；
            将水果放入盘中;
            if（放入的是桔子）V(So);
            else  V(Sa);
           }
     }
    son()
    {
        while(1)
          {
             P(So);
             从盘中取出桔子;
             V(S);
             吃桔子;
            ｝
    }
    daughter()
    {
         while(1)
            {
              P(Sa);
              从盘中取出苹果;
              V(S);
              吃苹果;
            ｝
｝

2.设某计算进程 CP 和打印进程 IOP 共用一个单缓冲区,CP 进程负责不断地计算数据并送入缓冲区进程负责不断地计算数据并送入缓冲区 T 中,IOP 进程负责不断地从缓冲区进程负责不断地从缓冲区T 中取出数据去打印。
解：
设有两个信号量Sa=0，Sb=1，Sa表示缓冲区中有无数据，Sb表示缓冲区有无空位置。
代码如下：
CP（）
{
while（计算未完成）
   {
   得到一个计算结果；
   P（Sb）；
   将数送到缓冲区中；
   V（Sa）；
   }
}

IOP（）
{
while（打印工作未完成）
   {
   P（Sa）；   
   从缓冲区中取一数；
   V（Sb）；
   从打印机上输出；
   }
}
