    使用PV信号量互斥同步解决如下问题：
    桌上有一个空盘，最多允许存放N只水果。爸爸可向盘中放一个苹果或者放一个桔子。儿子专等吃盘中的桔子，女儿专等吃盘子中的苹果。
    试用PV操作实现爸爸，儿子，女儿三个并发进程的同步：

//不妨设盘子的大小为N，初始盘子为空
信号量s_empty = N；//表示盘子是否为空，初始值N
信号量s_orange = 0 ; //表示当前盘子中的桔子数量，初始数量0
信号量s_apple = 0 ; //表示当前盘子中的苹果数量，初始数量0
//可以保证s_empty + s_orange + s_apple恒等于N
信号量互斥= 1 ; //互斥信号量
   父亲（）{
    而（true）{
        水果f = Buy_Fruit（）;
        P（s_empty）;
        P（互斥体）;
        Put_On_Plate（f）;
        V（互斥体）;
        如果（f ==橙色）{
            V（s_orange）;
        } 其他 {
            V（s_apple）;
        }
    }
}
     儿子（）{
    而（true）{
        P（s_orange）;
        P（互斥体）;
        Get_Orange_From_Plate（）;
        V（互斥体）;
        V（s_empty）;
        Eat_Orange（）;
    }
}
    女儿（）{
    而（true）{
        P（s_apple）;
        P（互斥体）;
        Get_Apple_From_Plate（）;
        V（互斥体）;
        V（s_empty）;
        Eat_Apple（）;
    }
}